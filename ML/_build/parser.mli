type token =
  | INT of (Ast.info * int)
  | VAR of (Ast.info * string)
  | PLUS of (Ast.info)
  | MINUS of (Ast.info)
  | TIMES of (Ast.info)
  | DIV of (Ast.info)
  | MOD of (Ast.info)
  | LPAREN of (Ast.info)
  | RPAREN of (Ast.info)
  | TRUE of (Ast.info)
  | FALSE of (Ast.info)
  | EQUALS of (Ast.info)
  | NOTEQUALS of (Ast.info)
  | LT of (Ast.info)
  | LEQ of (Ast.info)
  | GT of (Ast.info)
  | GEQ of (Ast.info)
  | NOT of (Ast.info)
  | AND of (Ast.info)
  | OR of (Ast.info)
  | SKIP of (Ast.info)
  | ASSIGN of (Ast.info)
  | SEMI of (Ast.info)
  | IF of (Ast.info)
  | THEN of (Ast.info)
  | ELSE of (Ast.info)
  | WHILE of (Ast.info)
  | DO of (Ast.info)
  | LBRACE of (Ast.info)
  | RBRACE of (Ast.info)
  | PRINT of (Ast.info)
  | COMMA of (Ast.info)
  | COLON of (Ast.info)
  | ARROW of (Ast.info)
  | LAMBDA of (Ast.info)
  | T_INT of (Ast.info)
  | T_BOOL of (Ast.info)
  | T_UNIT of (Ast.info)
  | BRANCH of (Ast.info)
  | FOCUS of (Ast.info)
  | U of (Ast.info)
  | MUT of (Ast.info)
  | SLEEP of (Ast.info)
  | UNIT of (Ast.info)
  | LET of (Ast.info)
  | IN of (Ast.info)
  | DESTROY of (Ast.info)
  | EOF

val p :
  (Lexing.lexbuf  -> token) -> Lexing.lexbuf -> Ast.expr
